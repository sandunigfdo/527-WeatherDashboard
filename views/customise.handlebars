<section class="userform-section">
    <h1>Edit Preference</h1>
    <form id="customise-form">
        <div class="form-group">
            <label for="city">City:</label>
            <input type="text" id="city" name="city" required>
        </div>
        <button type="submit">Save Changes</button>
    </form>
    <div id="message" style="color: green; display: none;"></div>
    <div style="margin-bottom: 20px;"></div>
    <button id="deleteAccountBtn" style="color: red;">Delete My Account</button>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        fetch('/get-user-info', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch user information');
                }
                return response.json();
            })
            .then(data => {
                if (data.city) {
                    document.getElementById('city').value = data.city; // 填充城市信息
                }
            })
            .catch(error => {
                document.getElementById('message').textContent = 'Failed to load user data. Please login in.';
                document.getElementById('message').style.color = 'red';
                document.getElementById('message').style.display = 'block';
            });
    });

    // 只允许字母和空格的验证函数
    function validateCity(city) {
        const cityRegex = /^[A-Za-z\s]+$/;
        return cityRegex.test(city);
    }

    // 将输入格式化为首字母大写的形式
    function formatCity(city) {
        return city
            .toLowerCase()
            .split(' ')
            .map(word => word.charAt(0).toUpperCase() + word.slice(1))
            .join(' ');
    }

    document.getElementById('customise-form').addEventListener('submit', async function (event) {
        event.preventDefault(); // 阻止默认表单提交行为

        let city = document.getElementById('city').value.trim(); // 获取并去除多余空格
        const messageDiv = document.getElementById('message');

        // 验证输入格式是否为字母和空格
        if (!validateCity(city)) {
            messageDiv.textContent = 'Please enter a valid city.';
            messageDiv.style.color = 'red';
            messageDiv.style.display = 'block';
            return; // 不提交表单
        }

        // 格式化城市名
        city = formatCity(city);

        try {
            const response = await fetch('/customise', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ city }) // 发送 JSON 数据
            });

            if (!response.ok) {
                throw new Error(await response.text());
            }

            const result = await response.json();
            messageDiv.textContent = result.message || 'Profile updated successfully!';
            messageDiv.style.color = 'green';
            messageDiv.style.display = 'block';

            // 在 2 秒后刷新页面
            setTimeout(() => {
                location.reload(); // 刷新页面
            }, 2000);

        } catch (error) {
            messageDiv.textContent = `Error: ${error.message}`;
            messageDiv.style.color = 'red';
            messageDiv.style.display = 'block';
        }
    });

    document.getElementById('deleteAccountBtn').addEventListener('click', async function () {
        const confirmation = confirm("Are you sure you want to delete your account? This action cannot be undone.");
        if (!confirmation) return;

        const messageDiv = document.getElementById('message');

        try {
            const response = await fetch('/delete-account', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.status === 401) {
                alert('You need to log in to delete your account.');
                window.location.href = '/login';
                return;
            }

            if (!response.ok) {
                throw new Error('Account deletion failed');
            }

            const result = await response.json();
            alert(result.message || 'Your account has been successfully deleted.');
            window.location.href = '/';
        } catch (error) {
            messageDiv.textContent = `Error deleting account: ${error.message}`;
            messageDiv.style.color = 'red';
            messageDiv.style.display = 'block';
        }
    });
</script>